{"version":3,"sources":["app.js","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/app.html","auth-config.js","environment.js","main.js","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/modules/components/editHelpTicket.html","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/modules/components/editUser.html","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/modules/components/tableHelpTickets.html","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/modules/components/tableUsers.html","modules/helpTickets.js","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/modules/helpTickets.html","modules/home.js","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/modules/home.css","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/modules/home.html","modules/landing.js","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/modules/landing.html","modules/users.js","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/modules/users.html","resources/data/data-services.js","resources/data/help-ticket-object.js","resources/data/user-object.js","resources/elements/nav-bar.js","C:/Users/for9606/Documents/javascript/810 web dev/Class_Project/client/src/resources/elements/nav-bar.html","resources/index.js","resources/value-converters/format-date.js"],"names":["App","configureRouter","config","router","addPipelineStep","AuthorizeStep","map","route","moduleId","name","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","window","regeneratorRuntime","configure","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","environment","start","then","setRoot","helptickets","Router","Helpticket","message","showHelpTicketEditForm","userObj","JSON","parse","sessionStorage","getItem","activate","getHelpTickets","newHelpTicket","helpticket","filesToUpload","Array","files","helpticketscontentArray","Title","PersonID","OwnerID","Status","helpticketcontent","Content","helpTicketId","file","FileName","OriginalFileName","showEditForm","setTimeout","$","focus","back","editHelpTicket","HelpTicketContent","personId","_id","content","getHelpTicketsContents","save","role","console","log","helpTicket","saveHelpticketAndContent","serverResponse","length","uploadFile","contentID","delete","deleteHelpticket","changeFiles","i","addFile","forEach","item","push","attached","feather","replace","Home","message2","Landing","users","User","showUserEditForm","newUser","user","fname","lname","active","email","password","openEditForm","saveUser","getUsers","editUser","changeActive","DataServices","HttpClient","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","withInterceptor","request","localStorage","append","response","get","url","fetch","json","data","catch","error","post","method","body","object","put","uploadFiles","formData","FormData","index","HELP_TICKET_SERVICE","HELP_TICKETCONTENT_SERVICE","HELP_FILEUPLOAD_SERVICE","helpticketsArray","inticketid","inhelpticket","id","USER_SERVICE","usersArray","NavBar","AuthService","loginMessage","on","find","removeClass","parent","addClass","login","setItem","stringify","loginError","isAuthenticated","navigate","authenticated","logout","removeItem","bind","globalResources","FormatDateValueConverter","toView","value","myDate","Date","toLocaleDateString","toLocaleTimeString"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    config.addPipelineStep('authorize', AuthorizeStep); \n    config.map([\n      {\n        route: ['', 'landing'],\n        moduleId: './modules/landing',\n        name: 'Landing',\n        auth: false\n      },\n      {\n        route: 'home',\n        moduleId: './modules/home',\n        name: 'Home',\n        auth: true\n      },\n      {\n        route: 'users',\n        moduleId: './modules/users',\n        name: 'Users',\n        auth: true\n      },\n      {\n        route: 'HelpTickets',\n        moduleId: './modules/helpTickets',\n        name: 'Help Tickets',\n        auth: true\n      }\n    ]);\n  }\n}\n",null,"var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/landing'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport regeneratorRuntime from 'regenerator-runtime';\nwindow.regeneratorRuntime = regeneratorRuntime;\nimport config from './auth-config';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig) => {\n      baseConfig.configure(config);\n    })\n    .feature('resources');\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  return aurelia.start().then(() => aurelia.setRoot());\n}\n",null,null,null,null,"import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { Helpticket } from '../resources/data/help-ticket-object'\r\n\r\n@inject(Router, Helpticket)\r\n\r\nexport class helptickets {\r\n    constructor(router, helptickets) {\r\n        this.router = router;\r\n        this.helptickets = helptickets;\r\n        this.message = 'Help Tickets';\r\n        this.showHelpTicketEditForm = false;\r\n        this.userObj = JSON.parse(sessionStorage.getItem('userObj'));\r\n    };\r\n\r\n    //get help tickets upon loading the page\r\n    async activate() {\r\n        await this.helptickets.getHelpTickets(this.userObj);\r\n    };\r\n\r\n    //pre-populate form for adding a new help ticket and a new content row\r\n    newHelpTicket() {\r\n        //intialize\r\n        this.helpticket = \"\";\r\n        this.filesToUpload = new Array();\r\n        this.files = new Array();\r\n        this.helpticketscontentArray = new Array();\r\n        \r\n        //prepopulate helpticket\r\n        this.helpticket = {\r\n            Title: \"\",\r\n            PersonID: this.userObj,\r\n            OwnerID: this.userObj,\r\n            Status: 'new'\r\n        };\r\n\r\n        //prepopulate content\r\n        this.helpticketcontent = {\r\n            Content: \"\",\r\n            PersonID: \"\",\r\n            helpTicketId: \"\",\r\n            file: {\r\n                FileName: \"\",\r\n                OriginalFileName: \"\"\r\n            }\r\n        };\r\n\r\n        //dispaly the form\r\n        this.showEditForm();\r\n    };\r\n\r\n    //Show the edit form, and set focus on title\r\n    showEditForm() {\r\n        this.showHelpTicketEditForm = true;\r\n        setTimeout(() => { $(\"#Title\").focus(); }, 500);\r\n    };\r\n\r\n    //go back to the grid, clean up the file arrays\r\n    back() {\r\n        this.filesToUpload = new Array();\r\n        this.files = new Array();\r\n        this.helpticketscontentArray = new Array();\r\n        this.showHelpTicketEditForm = false;\r\n    };\r\n\r\n    //edit a ticket from the grid\r\n    async editHelpTicket(helpticket) {\r\n        //initialize & set the ticket to row\r\n        this.helpticket = \"\";\r\n        this.filesToUpload = new Array();\r\n        this.files = new Array();\r\n        this.helpticketscontentArray = new Array();\r\n        this.helpticket = helpticket;\r\n\r\n        //set the content to blank (to allow add new content)\r\n        this.HelpTicketContent = {\r\n            personId: this.userObj._id,\r\n            content: \"\"\r\n        };\r\n\r\n        this.helpticketcontent = {\r\n            Content: \"\",\r\n            PersonID: \"\",\r\n            helpTicketId: \"\",\r\n            file: {\r\n                FileName: \"\",\r\n                OriginalFileName: \"\"\r\n            }\r\n        };\r\n\r\n        //get all the existing contents to display as browse\r\n        await this.helptickets.getHelpTicketsContents(helpticket._id);\r\n\r\n        //display the form\r\n        this.showEditForm();\r\n    };\r\n\r\n    //save either a insert, or an update\r\n    async save() {\r\n        //check if both ticket and content should be saved\r\n        if (this.helpticket && this.helpticket.Title\r\n            && this.helpticketcontent && this.helpticketcontent.Content) {\r\n            //check if person editing is admin/staff, if so, set owner id\r\n            if (this.userObj.role !== 'user') {\r\n                console.log('set owner id')\r\n                this.helpticket.OwnerID = this.userObj._id;\r\n            };\r\n            //combine ticket and content            \r\n            let helpTicket = { helpTicket: this.helpticket, content: this.helpticketcontent };\r\n            //save help ticket & content both\r\n            let serverResponse = await this.helptickets.saveHelpticketAndContent(helpTicket);\r\n            if (this.filesToUpload && this.filesToUpload.length > 0) {\r\n                this.helptickets.uploadFile(this.filesToUpload, serverResponse.contentID);\r\n            }\r\n            \r\n            //await this.helptickets.getHelpTickets(this.userObj);\r\n            this.back();\r\n\r\n        };\r\n\r\n        //Get all tickets for grid\r\n        await this.helptickets.getHelpTickets(this.userObj);\r\n\r\n        //go back to grid from the edit form\r\n        this.back();\r\n    };\r\n\r\n    //Delete help ticket and contents too\r\n    async delete() {\r\n        if (this.helpticket && this.helpticket._id) {\r\n            await this.helptickets.deleteHelpticket(this.helpticket._id);\r\n            await this.helptickets.getHelpTickets(this.userObj);\r\n            this.back();\r\n        };\r\n    };\r\n\r\n    //builds the list of files to add to content \r\n    changeFiles() {\r\n        this.filesToUpload = this.filesToUpload ? this.filesToUpload : new Array();\r\n        for (var i = 0; i < this.files.length; i++) {\r\n            let addFile = true;\r\n            this.filesToUpload.forEach(item => {\r\n                if (item.name === this.files[i].name) addFile = false;\r\n            })\r\n            if (addFile) this.filesToUpload.push(this.files[i]);\r\n        }\r\n    }\r\n\r\n\r\n    //lifecycle method for loading icon\r\n    attached() {\r\n        feather.replace()\r\n    };\r\n\r\n};",null,"import {inject} from 'aurelia-framework';\r\nimport {Router} from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class Home {\r\n  constructor(router) {\r\n\tthis.router = router;\r\n          this.message = 'HelpMe - Ticket Application Website!';\r\n          this.message2 = 'Thank you for logging in ';\r\n  };\r\n\r\n};\r\n",null,null,"import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router)\r\n\r\nexport class Landing {\r\n    constructor(router) {\r\n        this.router = router;\r\n        this.message = 'HelpMe - Ticket Application Website!';\r\n        this.message2 = 'Please log in';\r\n    };\r\n\r\n};\r\n",null,"import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { User } from '../resources/data/user-object'\r\n\r\n\r\n@inject(Router, User)\r\nexport class users {\r\n  constructor(router, users) {\r\n    this.router = router;\r\n    this.users = users;\r\n    this.message = 'All Users, Roles, and Active Status';\r\n    this.message2 = '(Admin access only)';\r\n    this.showUserEditForm = false;\r\n  };\r\n\r\n  //initialize new user form for input\r\n  newUser() {\r\n    this.user = {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      active: true,\r\n      role: \"user\",\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n    this.openEditForm();\r\n  };\r\n\r\n  //save user for insert and update\r\n  async save() {\r\n    if (this.user && this.user.fname && this.user.lname\r\n      && this.user.email && this.user.password)\r\n      await this.users.saveUser(this.user);\r\n    await this.getUsers();\r\n    this.back();\r\n  };\r\n\r\n  //back to user grid\r\n  back() {\r\n    this.showUserEditForm = false;\r\n  };\r\n\r\n  //set the form to selected user\r\n  editUser(user) {\r\n    this.user = user;\r\n    this.openEditForm();\r\n  };\r\n\r\n  //display edit form (for insert and udpate)\r\n  openEditForm() {\r\n    this.showUserEditForm = true;\r\n    setTimeout(() => { $(\"#firstName\").focus(); }, 500);\r\n  };\r\n  \r\n  //delete a user\r\n  async delete() {\r\n    if (this.user) {\r\n      await this.users.delete(this.user);\r\n      await this.getUsers();\r\n      this.back();\r\n    };\r\n  };\r\n\r\n  //changing an selected user from teh grid\r\n  changeActive(user) {\r\n    this.user = user;\r\n    this.save();\r\n  };\r\n\r\n\r\n  //lifecycle method upon page load\r\n  async activate() {\r\n    await this.getUsers();\r\n  };\r\n\r\n  //get all the users\r\n  async getUsers() {\r\n    await this.users.getUsers();\r\n  };\r\n\r\n  //lifecycle method for loading icon\r\n  attached() {\r\n    feather.replace()\r\n  };\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n",null,"import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n    //http request\r\n    constructor(http) {\r\n        //base stuff\r\n        this.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'X-Requested-With': 'Fetch'\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        var authHeader = 'Bearer ' + localStorage.getItem('aurelia_token')\r\n                        request.headers.append('Authorization', authHeader);\r\n                        return request;\r\n                    },\r\n                    response(response) {\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n\r\n    }\r\n\r\n    //generic get \r\n    get(url) {\r\n        return this.httpClient.fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    //generic post \r\n    post(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    //generic put\r\n    put(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'put',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    //generic delete\r\n    delete(url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'delete'\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n    //upload a file\r\n    uploadFiles(files, url) {\r\n        let formData = new FormData();\r\n        files.forEach((item, index) => {\r\n            //formData.append(item.name + index, item);\r\n            formData.append(item.name , item);\r\n        })\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: formData\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    };\r\n\r\n};\r\n","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from './data-services';\r\n//import { helptickets } from '../../modules/helpTickets';\r\n\r\n@inject(DataServices)\r\n\r\nexport class Helpticket {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.HELP_TICKET_SERVICE = 'helptickets';\r\n        this.HELP_TICKETCONTENT_SERVICE = '/HelpTicketContent/helpTicket';\r\n        this.HELP_FILEUPLOAD_SERVICE = 'HelpTicketContent/helpTicket';\r\n    };\r\n\r\n    //get all help tickets \r\n    async getHelpTickets(userObj) {\r\n        let url = this.HELP_TICKET_SERVICE;\r\n        if (userObj.role == 'user') {\r\n            url += '/user/' + userObj._id;\r\n        };\r\n        let response = await this.data.get(url);\r\n        if (!response.error) {\r\n            this.helpticketsArray = response;\r\n        } else {\r\n            this.helpticketsArray = [];\r\n        };\r\n    };\r\n\r\n    //get all content records to show\r\n    async getHelpTicketsContents(inticketid) {\r\n        let url = this.HELP_TICKETCONTENT_SERVICE + '/' + inticketid;\r\n        let response = await this.data.get(url);\r\n        if (!response.error) {\r\n            this.helpticketscontentArray = response;\r\n        } else {\r\n            this.helpticketscontentArray = [];\r\n        };\r\n    };\r\n\r\n    //save both ticket and content (for both insert and update)\r\n    async saveHelpticketAndContent(helpticket) {\r\n        let serverResponse;\r\n        if (helpticket) {\r\n            if (helpticket.helpTicket._id) {\r\n                serverResponse = await this.data.put(helpticket, this.HELP_TICKET_SERVICE);\r\n            } else {\r\n                serverResponse = await this.data.post(helpticket, this.HELP_TICKET_SERVICE);\r\n            };\r\n            return serverResponse;\r\n        };\r\n    };\r\n\r\n    //delete\r\n    async deleteHelpticket(inhelpticket) {\r\n        let serverResponse;\r\n        if (inhelpticket) {\r\n            await this.data.delete(this.HELP_TICKET_SERVICE + '/' + inhelpticket)\r\n        };\r\n        return serverResponse;\r\n    };\r\n\r\n    //upload file\r\n    async uploadFile(files, id) {\r\n        await this.data.uploadFiles(files, this.HELP_FILEUPLOAD_SERVICE + \"/upload/\" + id );\r\n    }\r\n    \r\n};","import { inject } from 'aurelia-framework';\r\nimport { DataServices } from './data-services';\r\n\r\n@inject(DataServices)\r\n\r\nexport class User {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    };\r\n\r\n    //set up save user route (put and post)\r\n    async saveUser(user) {\r\n        let serverResponse;\r\n        if (user) {\r\n          if (user._id) {\r\n            serverResponse = await this.data.put(user, this.USER_SERVICE);\r\n          } else {\r\n            serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n          };\r\n          return serverResponse;\r\n        };\r\n      };\r\n\r\n    //set up get users route\r\n    async getUsers() {\r\n        let response = await this.data.get(this.USER_SERVICE);\r\n        if (!response.error) {\r\n            this.usersArray = response;\r\n        } else {\r\n            this.usersArray = [];\r\n        };\r\n    };\r\n\r\n    //setup dete user route\r\n    async delete(user) {\r\n        if (user && user._id) {\r\n            await this.data.delete(this.USER_SERVICE + '/' + user._id)\r\n        };\r\n    };\r\n\r\n};\r\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { AuthService } from 'aurelia-auth';\r\n\r\n@inject(Router, AuthService)\r\n\r\nexport class NavBar {\r\n    constructor(router, auth) {\r\n        this.router = router;\r\n        this.auth = auth;\r\n        this.loginMessage = '';\r\n\r\n    };\r\n\r\n    //jQuery lifecycle method for highlighting selected menu option\r\n    attached() {\r\n        $('.navbar-nav a').on('click', function () {\r\n            $('.navbar-nav').find('li.active').removeClass('active');\r\n            $(this).parent('li').addClass('active');\r\n        });\r\n    };\r\n\r\n    //authenticate and save token is local object as well as \r\n    //add user object from session object, and set isAuthenticated to true\r\n    login() {\r\n        return this.auth.login(this.email, this.password)\r\n            .then(response => {\r\n                this.userObj = response.user;\r\n                sessionStorage.setItem(\"userObj\", JSON.stringify(this.userObj));\r\n                this.loginError = \"\";\r\n                this.isAuthenticated = this.auth.isAuthenticated();\r\n                this.loginMessage = \"Welcome \" + this.userObj.fname + \"!\";\r\n                this.router.navigate('home');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.authenticated = false;\r\n                this.loginMessage = \"Invalid credentials.\";\r\n            });\r\n    };\r\n\r\n    /*//remove user object from session object, and set isAuthenticated to false\r\n    logout() {\r\n        if (this.userObj) {\r\n            this.auth.logout(this.userObj.email);\r\n            sessionStorage.removeItem('user');\r\n            this.isAuthenticated = this.auth.isAuthenticated();\r\n            this.auth.logout();\r\n        };\r\n    };*/\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('user');\r\n        this.auth.logout();\r\n        this.isAuthenticated = this.auth.isAuthenticated();\r\n    };\r\n\r\n    //loading nav bar, set auth to false\r\n    async activate() {\r\n        this.isAuthenticated = false;\r\n    };\r\n\r\n    //bind lifecycle method to initialize the isAuthenticated\r\n    bind() {\r\n        this.isAuthenticated = this.auth.isAuthenticated();\r\n    }\r\n\r\n};\r\n",null,"export function configure(config) {\n  //global references\n  config.globalResources([\n    './elements/nav-bar'\n  ]);\n\n  config.globalResources([\n    './value-converters/format-date'\n  ]);\n}\n","export class FormatDateValueConverter {\r\n    toView(value) {\r\n        let myDate = new Date(value);\r\n        return myDate.toLocaleDateString() + \"<br/>\" + myDate.toLocaleTimeString();\r\n    };\r\n};\r\n"],"sourceRoot":".."}